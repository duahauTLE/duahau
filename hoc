#include <bits/stdc++.h>
using namespace std;
  #define ll long long int
  #define pi acos(-1)
  map <ll,ll> maps;
  set <ll> xet1;
  set <ll> xet2;
  vector <ll> v;
  ll sang[100001];
  ll F[92];
bool thuan_nghich(string s)
{
      for (int i=0 ,j=s.size()-1 ; i<= (s.size()-1)/2 , j>=(s.size()-1)/2;i=i+1,j=j-1)
      {
        if (s[i]!=s[j])
        {
          return false;
        }
        else return true;
      }
}
ll tong_chu_so(ll n)
{
    string s = to_string(n);
    ll x,sum=0;
    for (int i=0 ; i < s.size();i=i+1)
    {
      x= s[i]-'0';
      sum=sum+x;
    }
    return sum;
}
bool fibonacci(ll n)
{
   F[0]=0 , F[1]=1;
  for (int i= 2; i <=92 ;i=i+1)
  {
        F[i]=F[i-1]+F[i-2];
  }
    for (int i= 0; i <=92 ;i=i+1)
    {
          if(n==F[i])
          {
            return true;
          }
    }
    return false;
  
}
bool nguyen_to(ll k)  
  {
    if (k==1||k==0)
    {
      return false;
    }
    for ( int i=2 ; i <=sqrt(k);i=i+1)
    {
      if ( k%i==0)
      {
        return false;
      }
    }
    return true;
  }
ll giai_thua(int n) {
    ll tich = 1;
    for (int i = 1; i <= n; ++i) {
        tich *= i;
    }
    return tich;
}
bool chinh_phuong( ll n)

  {
      ll a = sqrt(n);
      if (a*a==n)
      {
        return true;
      }
      else return false;
  }
bool binary_search(ll a[] , ll n, ll x)
{
ll l=0 , r=n-1 ,mid;
sort (a,a+n);
while (l<=r)
{
  mid = (l+r)/2;
  if (a[mid]==x)
  {
    return true;
  }
  else if ( a[mid]>x)
  {
        
        r=mid-1;
  }
  else 
  {
    l = mid +1;
    
  }
}
return false;
}
ll binary_search_first(ll a[], ll n , ll x)
{
  sort (a,a+n);
  ll l=0 , r=n-1 , mid;
  ll res = -1;
  while (l<=r)
  {
    mid = ( l+r)/2;
      if (a[mid]==x)
      {
        res=mid;
      }
      else if ( a[mid] > x)
      {
          r=mid-1;
      }
      else 
      {
        l = mid +1;
      }
    return res;
  }
}
void sang_nguyen_to()
{
    for (int i=0 ;i <100001 ;i=i+1)
    {
      sang[i]=1;
    }
    sang[0]=sang[1]=0;

    for (int i=2 ; i<=sqrt(100001) ; i =i+1)
    {
      for (int j=i*i ;j<100000 ;j=j+i)
      {
        sang[j]=0;
      }
    }


}
 void solve() {
  
sang_nguyen_to();
for (int i=0 ;i < 10000 ;i=i+1)
{
  if (sang[i]==1)
  {
    cout << i << " ";
  }
}










 

   



   





    
     





 }
  void test()

  {
    ll t;
    cin >> t;
    cin.ignore();
    while(t--)
    {
      solve();
      cout << endl;
    }
  }
  int main()
  {
  ios_base::sync_with_stdio(false); cin.tie(NULL);
  #ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  #endif




  solve();
  }
